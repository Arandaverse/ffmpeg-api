basePath: /api/v1
definitions:
  domain.OutputFileMetadata:
    properties:
      file_format:
        type: string
      file_id:
        type: string
      file_type:
        type: string
      height:
        type: integer
      size_mbytes:
        type: number
      storage_url:
        type: string
      width:
        type: integer
    type: object
  dto.AuthResponse:
    properties:
      api_token:
        type: string
      username:
        type: string
    type: object
  dto.FFMPEGRequest:
    properties:
      ffmpeg_command:
        example: -i {{in1}} {{out1}}
        type: string
      input_files:
        additionalProperties:
          type: string
        example:
          '{"in1"': ' "https://storage.googleapis.com/ffmpeg-api-test-bucket/user_1/input/test.mp4"}'
        type: object
      output_files:
        additionalProperties:
          type: string
        example:
          '{"out1"': ' "string.mp4"}'
        type: object
    required:
    - ffmpeg_command
    - input_files
    - output_files
    type: object
  dto.FFMPEGResponse:
    properties:
      status:
        type: string
      uuid:
        type: string
    type: object
  dto.JobStatus:
    properties:
      created_at:
        type: string
      error:
        type: string
      output_files:
        additionalProperties:
          $ref: '#/definitions/domain.OutputFileMetadata'
        type: object
      progress:
        type: integer
      result:
        type: string
      status:
        enum:
        - pending
        - processing
        - completed
        - failed
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    required:
    - status
    type: object
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 100
        minLength: 8
        type: string
      register_key:
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - register_key
    - username
    type: object
  response.APIError:
    properties:
      message: {}
      type:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error:
        $ref: '#/definitions/response.APIError'
      success:
        type: boolean
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
  description: A serverless API for processing videos using FFMPEG. This API allows
    you to submit video processing jobs, monitor their progress, and manage user authentication.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: FFMPEG Serverless API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - text/html
      description: Display the main page with redirect button
      produces:
      - text/html
      responses:
        "200":
          description: HTML content
          schema:
            type: string
      summary: Show index page
      tags:
      - Index
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with username and password to obtain an API token
        for protected endpoints
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.AuthResponse'
              type: object
        "400":
          description: Invalid request or validation error
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Invalid credentials
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: Login user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account with username, password and email.
        The password must be at least 8 characters long.
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.AuthResponse'
              type: object
        "400":
          description: Invalid request or validation error
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "409":
          description: Username or email already exists
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      summary: Register a new user
      tags:
      - Auth
  /ffmpeg:
    post:
      consumes:
      - application/json
      description: |-
        Submit a video processing job using FFMPEG. The command should use placeholders like {{in1}} for input files and {{out1}} for output files.
        These placeholders will be replaced with actual file paths during processing.
      parameters:
      - description: FFMPEG processing details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.FFMPEGRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Job accepted for processing
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.FFMPEGResponse'
              type: object
        "400":
          description: Invalid request or validation error
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Missing or invalid API token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Process video with FFMPEG
      tags:
      - FFMPEG
  /ffmpeg/progress/{uuid}:
    get:
      consumes:
      - application/json
      description: Get the current status and progress of a video processing job.
        Returns details about output files when the job is completed.
      parameters:
      - description: Job UUID returned from the process endpoint
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job status retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.JobStatus'
              type: object
        "400":
          description: Invalid UUID format
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "401":
          description: Missing or invalid API token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
        "404":
          description: Job not found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  $ref: '#/definitions/response.APIError'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get job progress
      tags:
      - FFMPEG
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    description: API token obtained after login. Required for all protected endpoints.
    in: header
    name: X-API-Token
    type: apiKey
swagger: "2.0"
tags:
- description: Authentication endpoints for user registration and login
  name: Auth
- description: Video processing endpoints using FFMPEG
  name: FFMPEG
- description: Main page and general information
  name: Index
